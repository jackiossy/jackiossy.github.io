<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Biney&#39;s blog</title>
    <link>https://blog.mose.ltd/</link>
    <description>Recent content on Biney&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Sep 2025 14:33:56 +0800</lastBuildDate>
    <atom:link href="https://blog.mose.ltd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工业项目设计｜ CUDA 算投影，YOLOv8识别</title>
      <link>https://blog.mose.ltd/posts/%E5%B7%A5%E4%B8%9A%E7%BA%BF%E4%B8%8A%E7%9A%84%E4%BD%9C%E4%B8%9A%E6%8C%87%E5%AF%BC%E4%B9%A6%E7%94%A8-pyvista-%E6%B8%B2%E6%9F%93-las%E7%94%A8-cuda-%E7%AE%97%E6%8A%95%E5%BD%B1%E5%86%8D%E8%AE%A9-yolov8-%E6%8A%8A%E7%89%A9%E4%BD%93%E7%82%B9%E5%90%8D/</link>
      <pubDate>Tue, 09 Sep 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E5%B7%A5%E4%B8%9A%E7%BA%BF%E4%B8%8A%E7%9A%84%E4%BD%9C%E4%B8%9A%E6%8C%87%E5%AF%BC%E4%B9%A6%E7%94%A8-pyvista-%E6%B8%B2%E6%9F%93-las%E7%94%A8-cuda-%E7%AE%97%E6%8A%95%E5%BD%B1%E5%86%8D%E8%AE%A9-yolov8-%E6%8A%8A%E7%89%A9%E4%BD%93%E7%82%B9%E5%90%8D/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这个项目不是论文，是一份能在车间落地的“作业指导书”。材料、工序、质检一步步来，最后把坑也写明白，省你半夜返工。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;— 备料清单（用到什么，心里要有数）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据&lt;/strong&gt;：.las 点云（结构光/激光线扫均可），单帧≈百万级点。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;渲染&lt;/strong&gt;：PyVista（基于 VTK），支持交互缩放/旋转/截图。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;加速&lt;/strong&gt;：CUDA（CuPy 或 Numba CUDA），把投影/筛选/LOD 丢给 GPU。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;识别&lt;/strong&gt;：YOLOv8（ultralytics），先在渲染帧上做 2D 检测，再把框“投回”3D。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;硬件&lt;/strong&gt;：NVIDIA 显卡（8GB 显存以上更稳），PCIe 不要跑在 x4 半高上。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;系统提示&lt;/strong&gt;：开启显卡持久化模式，避免首次 Kernel 冷启动卡顿。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;— 工序卡 ①：把 LAS 落到屏幕上（基础渲染骨架）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; laspy&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; numpy &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; pyvista &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;las &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; laspy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample.las&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyz &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;vstack([las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;x, las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;y, las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;z])&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;T&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32)     &lt;span style=&#34;color:#6272a4&#34;&gt;# (N,3)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;getattr&lt;/span&gt;(las, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;intensity&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cloud &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pv&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;PolyData(xyz)                                        &lt;span style=&#34;color:#6272a4&#34;&gt;# 点云&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cloud[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;I&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; intensity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;min()) &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; (intensity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;ptp() &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1e-6&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pv&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Plotter()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add_points(cloud, scalars&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;I&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   render_points_as_spheres&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;False&lt;/span&gt;, point_size&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;show_axes()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;show(auto_close&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;False&lt;/span&gt;)                                   &lt;span style=&#34;color:#6272a4&#34;&gt;# 后面要截图/回调&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先“看见”再谈优化。首屏能稳定 15–20 fps，是后续调参的底线。&lt;/li&gt;&#xA;&lt;li&gt;点大小别贪，2px 起步。点云太密先做下采样（后文用 CUDA 处理）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;— 工序卡 ②：把重活丢给 GPU（投影、视锥裁剪、LOD 一把梭）&lt;/p&gt;</description>
    </item>
    <item>
      <title>手拧出来的界面——Python &#43; Qt5 纯代码布局实战手账</title>
      <link>https://blog.mose.ltd/posts/%E6%89%8B%E6%8B%A7%E5%87%BA%E6%9D%A5%E7%9A%84%E7%95%8C%E9%9D%A2python-&#43;-qt5-%E7%BA%AF%E4%BB%A3%E7%A0%81%E5%B8%83%E5%B1%80%E5%AE%9E%E6%88%98%E6%89%8B%E8%B4%A6/</link>
      <pubDate>Sat, 02 Aug 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E6%89%8B%E6%8B%A7%E5%87%BA%E6%9D%A5%E7%9A%84%E7%95%8C%E9%9D%A2python-&#43;-qt5-%E7%BA%AF%E4%BB%A3%E7%A0%81%E5%B8%83%E5%B1%80%E5%AE%9E%E6%88%98%E6%89%8B%E8%B4%A6/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;记录一次从“拖一拖就能跑”到“手拧螺丝”的转向。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;场景：做一个日志管理与点云浏览的小工具，迭代很快，UI 需要频繁改版。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;00为什么我从可视化回到纯代码&#34;&gt;&lt;strong&gt;00｜为什么我从可视化回到纯代码&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;那天晚上 23:40&lt;/strong&gt;，我在 Qt Designer 里把两个 QHBoxLayout 嵌套成了“左树右表”，又加了三层 QSpacerItem。看起来顺手，但两件小事把我劝退了：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;改动难做“参数化”&lt;/strong&gt;：想“根据配置隐藏右栏”，在 .ui 里要加占位、条件样式，变成“面向工具工作”，不是“面向需求工作”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;版本控制不可读&lt;/strong&gt;：.ui 是 XML，MR 里几十行 diff 看不出&lt;strong&gt;意图&lt;/strong&gt;，合并时冲突又脆。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;后来我用纯代码重搭一遍布局。几百行 Python 全在仓里，谁改了哪一行一眼明白。主题切换、动态插拔控件、AB 测试布局，都更像写程序而不是拼积木。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Designer 优点&lt;/strong&gt;：上手快、视觉把控直观、适合静态页面。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Designer 痛点&lt;/strong&gt;：动态视图/条件布局吃力、PR 不可读、多人协作容易踩冲突。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;纯代码优点&lt;/strong&gt;：参数化、复用、可测试、可 review。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;纯代码门槛&lt;/strong&gt;：前期慢；但一旦形成“布局配方”，改动成本下降快。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;01三张布局配方卡&#34;&gt;&lt;strong&gt;01｜三张“布局配方卡”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;配方卡都用 &lt;strong&gt;PyQt5&lt;/strong&gt;（pip install PyQt5），关键是&lt;strong&gt;结构&lt;/strong&gt;与&lt;strong&gt;伸缩因子&lt;/strong&gt;用对。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;卡-1经典三段式工具栏--主区--状态栏&#34;&gt;&lt;strong&gt;卡 1：经典三段式（工具栏 / 主区 / 状态栏）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (QApplication, QMainWindow, QWidget, QVBoxLayout,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             QHBoxLayout, QToolBar, QLabel, QStatusBar, QPushButton)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Shell&lt;/span&gt;(QMainWindow):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; __init__(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;__init__()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setWindowTitle(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;三段式配方&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# 1) 工具栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QToolBar(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;工具&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addAction(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;刷新&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addAction(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;导出&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addToolBar(tb)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# 2) 中心区：左列（过滤器）+ 右列（内容）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        center &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QHBoxLayout(center)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget(); left_col &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QVBoxLayout(left)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(QLabel(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;过滤器&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addStretch(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 左列靠上，剩余空间往下消化&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget(); right_col &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QVBoxLayout(right)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(QLabel(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;内容视图&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addStretch(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(left, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;)   &lt;span style=&#34;color:#6272a4&#34;&gt;# 权重 0：窄栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(right, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 权重 1：主栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setContentsMargins(&lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setSpacing(&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setCentralWidget(center)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setStatusBar(QStatusBar())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：&lt;/p&gt;</description>
    </item>
    <item>
      <title>双机记：在阿里云内网把 MongoDB 主/副跑稳</title>
      <link>https://blog.mose.ltd/posts/%E5%8F%8C%E6%9C%BA%E8%AE%B0%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E5%86%85%E7%BD%91%E6%8A%8A-mongodb-%E4%B8%BB%E5%89%AF%E8%B7%91%E7%A8%B3/</link>
      <pubDate>Tue, 22 Jul 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E5%8F%8C%E6%9C%BA%E8%AE%B0%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E5%86%85%E7%BD%91%E6%8A%8A-mongodb-%E4%B8%BB%E5%89%AF%E8%B7%91%E7%A8%B3/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这不是白皮书，也不是“十分钟学会复制集”。这是一次上线前夜的“实战日志”。两台 ECS：&lt;strong&gt;A&lt;/strong&gt; 和 &lt;strong&gt;B&lt;/strong&gt;，同一 VPC，只开内网。目标很朴素：A 为 &lt;strong&gt;Primary&lt;/strong&gt;，B 为 &lt;strong&gt;Secondary&lt;/strong&gt;，数据稳、切换可预期、故障能复盘。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;00开机前的三张小纸条先决条件&#34;&gt;&lt;strong&gt;00｜开机前的三张小纸条（先决条件）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;网&lt;/strong&gt;：A 与 B 在同一 &lt;strong&gt;VPC/交换机&lt;/strong&gt;，仅放行 &lt;strong&gt;27017&lt;/strong&gt; 彼此互通；22 端口仅对跳板机开放。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时&lt;/strong&gt;：两台机器时钟同步（chrony / ntp），否则复制与鉴权会出幺蛾子。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;名&lt;/strong&gt;：给 A/B 起&lt;strong&gt;固定主机名&lt;/strong&gt;或内网域名，后面配置里直接写这个名（别写公网）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;01分镜一生成暗号keyfile&#34;&gt;&lt;strong&gt;01｜分镜一：生成“暗号”（keyFile）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;旁白&lt;/strong&gt;：复制集要彼此信任，先做一把共同钥匙。&lt;/p&gt;&#xA;&lt;p&gt;在 &lt;strong&gt;A&lt;/strong&gt; 上：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo bash -c &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;openssl rand -base64 756 &amp;gt; /etc/mongo-keyfile&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown mongod:mongod /etc/mongo-keyfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#bd93f9&#34;&gt;600&lt;/span&gt; /etc/mongo-keyfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 复制到 B（走内网）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp -o &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;no /etc/mongo-keyfile root@B内网IP:/etc/mongo-keyfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh root@B内网IP &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;chown mongod:mongod /etc/mongo-keyfile &amp;amp;&amp;amp; chmod 600 /etc/mongo-keyfile&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;口令文件权限&lt;strong&gt;必须&lt;/strong&gt;是 600，否则 mongod 直接罢工。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;02分镜二写两份不对称的&#34;&gt;&lt;strong&gt;02｜分镜二：写两份不对称的&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;mongodconf&#34;&gt;&lt;strong&gt;mongod.conf&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;道具&lt;/strong&gt;：Ubuntu 22.04 / AlmaLinux 9 都行，MongoDB 6.x/7.x 社区版即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>《当“墙”学会说人话》——iOS 独立开发者的付费墙设计手记</title>
      <link>https://blog.mose.ltd/posts/%E5%BD%93%E5%A2%99%E5%AD%A6%E4%BC%9A%E8%AF%B4%E4%BA%BA%E8%AF%9Dios-%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E4%BB%98%E8%B4%B9%E5%A2%99%E8%AE%BE%E8%AE%A1%E6%89%8B%E8%AE%B0/</link>
      <pubDate>Sat, 21 Jun 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E5%BD%93%E5%A2%99%E5%AD%A6%E4%BC%9A%E8%AF%B4%E4%BA%BA%E8%AF%9Dios-%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E4%BB%98%E8%B4%B9%E5%A2%99%E8%AE%BE%E8%AE%A1%E6%89%8B%E8%AE%B0/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;&#xA;&lt;p&gt;[序——一盏台灯的故事]&lt;/p&gt;&#xA;&lt;p&gt;凌晨两点，构建刚过，测试机发热还没散。我把应用里最后一块“未完成”的地方——付费墙——临时用一张灰色图挡住了。第二天数据很诚实：日活照常、转化寥寥。那晚我意识到：我们把它叫“付费墙”，于是它就真的像堵墙；可用户想要的，是一扇能看见屋内光亮的门。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-付费墙本质是一份可验证的承诺&#34;&gt;&lt;strong&gt;1) 付费墙，本质是一份“可验证的承诺”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;墙是阻隔；承诺是桥。&lt;/p&gt;&#xA;&lt;p&gt;把付费墙从“拦路”改成“对话”，你会得到一张结构化的契约，包含四件事：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;时机&lt;/strong&gt;：为什么是现在？（触发条件可解释）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;价值&lt;/strong&gt;：付了钱后，世界哪里不同？（可感知差异）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;证据&lt;/strong&gt;：凭什么信？（可验证线索）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;退路&lt;/strong&gt;：如果不合适，怎么优雅退出？（可逆性与尊重）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;只要这四件事说清楚，价格反倒不再是首因。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-五条设计信念写给自己看的边注&#34;&gt;&lt;strong&gt;2) 五条设计信念（写给自己看的边注）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;先爱后收钱&lt;/strong&gt;：第一次“啊哈时刻”（Aha）之后再出现付费墙，胜过冷启动硬拦。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可逆的门&lt;/strong&gt;：随处可见的“恢复购买”“管理订阅”“隐私/条款”，降低心理成本。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;一眼到价值&lt;/strong&gt;：用“前后对照”而非功能枚举；展示“付费前/后”的具体画面或数据。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;价格即叙事&lt;/strong&gt;：选项不是列表，是立场。主推档表达“我们相信你的主要场景”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;诚实胜过花哨&lt;/strong&gt;：倒计时、伪限时、隐形关闭按钮=短期转化的债，长期口碑的坑。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;3-付费墙的四扇门从出现到离开&#34;&gt;&lt;strong&gt;3) 付费墙的四扇门（从出现到离开）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;门一：时机&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首触：完成第一次核心动作后（例如生成首个结果、看完第一段内容）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;二触：用户“回看价值”时（例如历史统计页、对比图、收藏数量）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;末触：离开关键页面/功能前，用“保存进度”式轻提示。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;避免&lt;/strong&gt;：冷启动强弹、不允许浏览半步。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;门二：价值&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用“结果截图 + 三个标签”替代“长段功能清单”。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;价值语言模板：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;更快&lt;/em&gt;（节省时间/步骤）&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;更稳&lt;/em&gt;（失败率下降/离线可用）&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;更广&lt;/em&gt;（上限提升/批量能力）&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;更美&lt;/em&gt;（导出质量/主题样式）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;把一句口号换成一段“前后对比动画”（动图/短视频）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;门三：选择&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;三档足矣：&lt;strong&gt;月度&lt;/strong&gt;（试水）、&lt;strong&gt;年度&lt;/strong&gt;（主推）、&lt;strong&gt;一次性解锁&lt;/strong&gt;（若业务允许）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;年度卡片给“视觉高度”和“承诺句”：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“常用人群首选 · 30 天无理由取消（通过系统设置）”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;试用≠强绑定：明确写出“试用到期将自动续订，可随时取消”。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;门四：退路&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;显眼“恢复购买”“管理订阅”“隐私政策/使用条款”以及“联系客服”。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;离开时的轻提示文案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“没关系，你的进度已保存。随时回来继续。”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;4-版式三解同一内容三种排版&#34;&gt;&lt;strong&gt;4) 版式三解（同一内容，三种排版）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;A. 叙事式（讲一个 8 秒的故事）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;上：一张“前后对比”动图&lt;/li&gt;&#xA;&lt;li&gt;中：一句承诺 + 三个实证标签（如“导出无水印”“批量 100 个”“夜间离线可用”）&lt;/li&gt;&#xA;&lt;li&gt;下：价格卡 + 年度主推 + 常见疑问折叠&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;B. 对比式（用表格讲清改变）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;左列：免费&lt;/li&gt;&#xA;&lt;li&gt;右列：专业&lt;/li&gt;&#xA;&lt;li&gt;每行只写“一个明确结果”，如“同屏对比 2× → 4×”“本地模型尺寸上限 50MB → 1GB”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;C. 沉浸式（弱文案，强现场）&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WWDC 2025：一个独立 iOS 开发者的观后感与落地清单</title>
      <link>https://blog.mose.ltd/posts/wwdc-2025%E4%B8%80%E4%B8%AA%E7%8B%AC%E7%AB%8B-ios-%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E8%A7%82%E5%90%8E%E6%84%9F%E4%B8%8E%E8%90%BD%E5%9C%B0%E6%B8%85%E5%8D%95/</link>
      <pubDate>Sat, 14 Jun 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/wwdc-2025%E4%B8%80%E4%B8%AA%E7%8B%AC%E7%AB%8B-ios-%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E8%A7%82%E5%90%8E%E6%84%9F%E4%B8%8E%E8%90%BD%E5%9C%B0%E6%B8%85%E5%8D%95/</guid>
      <description>&lt;h1 id=&#34;wwdc-2025一个独立-ios-开发者的观后感与落地清单&#34;&gt;WWDC 2025：一个独立 iOS 开发者的观后感与落地清单&lt;/h1&gt;&#xA;&lt;p&gt;那天凌晨，看完 Keynote，我把 Xcode 升到新 beta，把主项目拉了个新分支，做了三件事：先把老页面换到新样式，再试了试“Apple Intelligence”的开发能力，最后在构建脚本里加了两条回退开关。写点东西留给自己，也留给同路的独立开发者。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;一句话先定调&#34;&gt;&lt;strong&gt;一句话先定调&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;今年的 WWDC，不是“再造一门框架”的那种巨浪，而是&lt;strong&gt;把整片海面调成了新颜色&lt;/strong&gt;：全平台统一的 &lt;strong&gt;Liquid Glass&lt;/strong&gt; 设计语言；面向开发者开放的 &lt;strong&gt;Foundation Models&lt;/strong&gt; 框架（可直接调用 on-device 的 Apple Intelligence 模型）；以及 &lt;strong&gt;Xcode 26&lt;/strong&gt; 把大模型正式塞进了工作流（含内置 ChatGPT 的接入位）。这些都是&lt;strong&gt;已落地、有入口&lt;/strong&gt;的变化，不是海市蜃楼。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;设计这件事不只是变美而是统一叙事&#34;&gt;&lt;strong&gt;设计这件事：不只是“变美”，而是“统一叙事”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Liquid Glass 是这次最直观也最“要命”的变化：按钮、工具条、标签页、图标到控件状态，整体的材质与光感都换了调性，而且是&lt;strong&gt;跨 iOS / iPadOS / macOS / watchOS / tvOS 的统一设计&lt;/strong&gt;。对独立开发者，这意味着两点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;视觉债会被一次性摊在今年：你不动，应用会“显老”；你动，就要思考 iPhone / iPad / Mac 三端的一致性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SwiftUI&lt;/strong&gt; 成为最短路径：原生框架已经为这一套新样式铺了路，迁移成本和可维护性，肉眼可见地优于手搓 UIKit + 自定义控件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;实践里，我先挑了两个“用户每天都盯着”的页面做试点：列表-详情与拍照-编辑。把自绘的工具栏收掉，用系统的导航与工具条，留出“材质”和“空白”去说话。迁移的主痛点其实不是代码，而是&lt;strong&gt;产品取舍&lt;/strong&gt;：过去把功能“塞满一屏”的习惯，要改成“重点露在台前，其余随场景浮出”的节奏。这套心法，与新设计是同频的。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;apple-intelligence不是聊天是能力位&#34;&gt;&lt;strong&gt;Apple Intelligence：不是“聊天”，是“能力位”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;苹果把 on-device 的 &lt;strong&gt;Apple Intelligence&lt;/strong&gt; 通过 &lt;strong&gt;Foundation Models&lt;/strong&gt; 框架开放了出来：Swift 原生可调（官方宣称几行代码起步），支持“受引导生成”“工具调用”等用法，关键是&lt;strong&gt;离线可用、隐私本地化、推理不计费&lt;/strong&gt;。这对独立开发者很现实：可以把“AI”当&lt;strong&gt;具体功能&lt;/strong&gt;而非单独卖点，用它在本地做改写、总结、结构化提取，或把复杂表单的“填空”改成“校对”。&lt;/p&gt;&#xA;&lt;p&gt;冷水也要泼：&lt;strong&gt;覆盖面有限&lt;/strong&gt;。今年的 Apple Intelligence 仍限定在指定设备与语言（iPhone 16 全系、15 Pro/Pro Max，以及 M 系列 iPad/Mac；语言以英/法/德/意/葡巴西/西/日/韩/简中为主，其他语言宣称年内补齐）。做用户量的应用，你得准备&lt;strong&gt;优雅降级&lt;/strong&gt;与&lt;strong&gt;清晰的“可用设备/语言”提示&lt;/strong&gt;，否则会招来差评。&lt;/p&gt;</description>
    </item>
    <item>
      <title>不背成语｜把 Core Data 搜索提快 70% 的门诊病历</title>
      <link>https://blog.mose.ltd/posts/%E4%B8%8D%E8%83%8C%E6%88%90%E8%AF%AD%E6%8A%8A-core-data-%E6%90%9C%E7%B4%A2%E6%8F%90%E5%BF%AB-70-%E7%9A%84%E9%97%A8%E8%AF%8A%E7%97%85%E5%8E%86/</link>
      <pubDate>Thu, 15 May 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E4%B8%8D%E8%83%8C%E6%88%90%E8%AF%AD%E6%8A%8A-core-data-%E6%90%9C%E7%B4%A2%E6%8F%90%E5%BF%AB-70-%E7%9A%84%E9%97%A8%E8%AF%8A%E7%97%85%E5%8E%86/</guid>
      <description>&lt;p&gt;&lt;strong&gt;主诉&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;有用户留言：“搜索像憋着气，一下快一下慢。”我盯着输入法候选框发了会儿呆，决定把这口气顺过来。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;既往史&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;这不是云检索。我在首启时通过 &lt;strong&gt;HTTPS 拉全量&lt;/strong&gt;（上千条高频成语），&lt;strong&gt;落到 Core Data（SQLite 后端）&lt;/strong&gt;；之后每天拉&lt;strong&gt;增量更新&lt;/strong&gt;。搜索完全本地，离线也能用。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;初诊先摸脉再下刀&#34;&gt;&lt;strong&gt;初诊：先摸脉，再下刀&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;那晚我没改一行代码，只开了 &lt;strong&gt;Instruments（Core Data Fetches + Time Profiler）&lt;/strong&gt; 和 &lt;strong&gt;OSLog signpost&lt;/strong&gt;。连续敲“f”“fe”“fen”… 记录了 100 次样本（iPhone 15）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;构建谓词：约 8 ms&lt;/li&gt;&#xA;&lt;li&gt;fetch：&lt;strong&gt;120–180 ms&lt;/strong&gt;（抖动明显）&lt;/li&gt;&#xA;&lt;li&gt;cell 绑定：约 35 ms&lt;/li&gt;&#xA;&lt;li&gt;端到端：&lt;strong&gt;170–220 ms/次&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;几千条数据不该这样抖。问题不是量级，是查询形态。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;诊断几处暗伤&#34;&gt;&lt;strong&gt;诊断：几处“暗伤”&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;谓词用的是三连 &lt;strong&gt;CONTAINS&lt;/strong&gt;（汉字/拼音/首字母），在 SQLite 上基本等价全表扫；&lt;/li&gt;&#xA;&lt;li&gt;列表首屏只显示“成语+释义前缀”，却把整条对象都解包；&lt;/li&gt;&#xA;&lt;li&gt;排序按 hanzi 的默认规则，既不友好也难走索引；&lt;/li&gt;&#xA;&lt;li&gt;每次键入都在&lt;strong&gt;主队列 context&lt;/strong&gt; 上同步 fetch，UI 与 IO 抢同一口气；&lt;/li&gt;&#xA;&lt;li&gt;增量更新时只改了业务字段，忘了重算搜索相关的“衍生字段”，让老数据“口音”没改掉。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;处置五步手术步步能回退&#34;&gt;&lt;strong&gt;处置：五步手术，步步能回退&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;① 重铸检索字段：把“包含”变成“可索引的前缀”&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;落地时为每条记录生成一个&lt;strong&gt;归一化 searchKey&lt;/strong&gt;：小写、去标点、空格分词，拼接“汉字 + 全拼 + 首字母”。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“风马牛不相及”&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;→ &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;风马牛不相及 fengmaniu buxiangji fmn bxj&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;谓词从 CONTAINS 换成 &lt;strong&gt;LIKE 前缀&lt;/strong&gt;（能吃索引）：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Gin × MongoDB 性能优化记：把 p99 从 480ms 拉到 92ms</title>
      <link>https://blog.mose.ltd/posts/go-gin--mongodb-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%AE%B0%E6%8A%8A-p99-%E4%BB%8E-480ms-%E6%8B%89%E5%88%B0-92ms/</link>
      <pubDate>Fri, 11 Apr 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/go-gin--mongodb-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%AE%B0%E6%8A%8A-p99-%E4%BB%8E-480ms-%E6%8B%89%E5%88%B0-92ms/</guid>
      <description>&lt;h1 id=&#34;go-gin--mongodb-性能优化记把-p99-从-480ms-拉到-92ms&#34;&gt;&lt;strong&gt;Go Gin × MongoDB 性能优化记：把 p99 从 480ms 拉到 92ms&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这是一篇来自独立开发者后端的一线笔记：Molived（沉浸式观影榜单）与「不背成语」两个 App 共用同一套 Go + Gin + MongoDB 的 API。在一次晚高峰的抖动后，我们给这套系统做了系统性体检与优化。本文复盘方法、过程与落地方案，避免“经验之谈”的空泛，尽量用可复用的技术细节说话。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;0-故事的起点晚八点的抖动&#34;&gt;&lt;strong&gt;0. 故事的起点：晚八点的抖动&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;晚高峰（20:00–22:00）是 Molived 的自然流量峰值。一次发布后，观察到两条接口 &lt;strong&gt;p99 从 ~180ms 升到 480–600ms&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/v1/movies/hotlist：带排序与筛选的内容列表。&lt;/li&gt;&#xA;&lt;li&gt;/v1/idioms/review/next：「不背成语」按 nextReviewAt 拉取下一个待复习批次。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;表面看起来是“数据库慢了”。但优化不是猜谜。我们的路线是：&lt;strong&gt;先度量 → 再定位 → 小步验证 → 渐进固化&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-先立度量与边界没有观测优化等于玄学&#34;&gt;&lt;strong&gt;1. 先立度量与边界：没有观测，优化等于玄学&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-指标与追踪&#34;&gt;&lt;strong&gt;1.1 指标与追踪&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;延迟分位&lt;/strong&gt;：p50 / p90 / p95 / p99，接口与下游（Mongo）分别记录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;资源指标&lt;/strong&gt;：连接池（CheckedOut/CheckedIn）、等待队列、CPU/GC、goroutine。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;追踪&lt;/strong&gt;：OpenTelemetry（Gin 中间件 + Mongo 驱动 hook）串起一次请求的全链路（反向代理 → Gin → 业务 → Mongo）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-生产可用的最小观测集&#34;&gt;&lt;strong&gt;1.2 生产可用的最小观测集&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;pprof&lt;/strong&gt;：只在灰度与紧急定位时启用，避免常开带来的开销。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Explain Plan&lt;/strong&gt;：所有慢查询存证（抽样保存计划、扫描量、索引命中）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;用这些，才能将“感觉”变成“证据”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>写给进入开发者生涯9周年的自己</title>
      <link>https://blog.mose.ltd/posts/%E5%86%99%E7%BB%99%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E8%80%85%E7%94%9F%E6%B6%AF9%E5%91%A8%E5%B9%B4%E7%9A%84%E8%87%AA%E5%B7%B1-/</link>
      <pubDate>Wed, 25 Dec 2024 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E5%86%99%E7%BB%99%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E8%80%85%E7%94%9F%E6%B6%AF9%E5%91%A8%E5%B9%B4%E7%9A%84%E8%87%AA%E5%B7%B1-/</guid>
      <description>&lt;h2 id=&#34;写给进入开发者生涯9周年的自己&#34;&gt;写给进入开发者生涯9周年的自己&lt;/h2&gt;&#xA;&lt;h3 id=&#34;这是一篇个人成长总结的碎碎念-对自己的走过的路做一个随笔总结&#34;&gt;这是一篇个人成长总结的碎碎念， 对自己的走过的路做一个随笔总结&lt;/h3&gt;&#xA;&lt;p&gt;​       大家好，我是独立开发者Esimo，Molived独立开发作者， 一些朋友可能认识我，也在用我的一些作品（难绷，好像目前只有Molived），因为国内独立开发者正常情况都是实名上架的，所以我也没有什么好隐瞒或者隐藏的，以下内容是我的真实经历和感想， 希望可以对与迷茫的朋友们有一些帮助。&lt;/p&gt;&#xA;&lt;p&gt;​       我不是一个学习好的孩子，在我读高中的时候， 我的学习非常的烂，烂到什么程度呢？ 就是连抄作业数学符号都要照着画下来还会写错的， 让老师笑喷的那种。当时我在一个离家走路只有10分钟就能达到教师的普通高中上课， 学校的学习风气也是很一般那种， 每天上课最忙碌的事情就是拿出我的MP4，看电影，追剧。当时还没有智能手机的年代， 那个时候还没有充电宝这种商品，这种概念， 我当时制作了一个超多容量的电池， 外挂在我的MP4上， 这可以使得我的MP4可以播放一整天，都不会没有电。 我很喜欢物理课，在物理课上，我总是不会开小差。 我很喜欢电路，电子，计算机，软件，硬件 这些东西，这些内容让我非常的痴迷，同时我也非常的喜欢玩儿手机的各种软件， 各种折腾手机。&lt;/p&gt;&#xA;&lt;p&gt;​       我很喜欢编程，但是当时并没有人可以带我入门， 带我走进这个行业，我也只会一些电脑装机和系统安装维护的一些简单的电脑知识和操作。在2011年冬天， 我一次偶然的机会， 我看到了一台手机， 那就是iPhone 4，Retina屏幕点亮的那一瞬间，我被彻底的震撼住了。 这台手机的出现打破了我对手机的所有认知，无论是软件上还是硬件上， 这台手机是那么的优雅，那么的丝滑。我当时就在思考🤔， 这是一家什么样的公司， 这个产品到底是如何做到的。 通过网络的了解， 我开始认识苹果，认识iOS， 并且成为了一名果粉， 我非常喜欢iOS系统和软件带来的用户体验。一颗种子从次在一个少年的内心当中发了芽。&lt;/p&gt;&#xA;&lt;p&gt;​       当时由于我的高中学习成绩并不理想，当时班级里面也有很多的同学辍学，当时有一个年长的朋友问我， 问我以后想做什么工作？以后想成为一个什么样的人， 我当时认真思考了一下， 我非常坚定的说，“我想当iOS开发者，我要当软件工程师”。 当时不经意的一句话，谁能想到未来我会实现这句话。但这都是之后的故事了。因为一些家庭原因和我的成绩不理想，我并没有考上一所本科大学，我也没有学上我喜欢的计算机相关专业， 我去学了电气相关的专业。但是由于就业形势非常的不景气， 我毕业后就失业了。当我当年找不到工作的时候， 我当时就想， 我的初心是什么， 我最想做的工作是什么，我想起了年少时的自己， 我经历了一段黑暗的时期，迷茫的时期， 我相信大学刚毕业，或者说是刚刚实习的朋友总会有这种迷茫的时刻。老话讲，“谁的青春不迷茫”。&lt;/p&gt;&#xA;&lt;h4 id=&#34;重新再次出发&#34;&gt;重新再次出发&lt;/h4&gt;&#xA;&lt;p&gt;​       2015年的秋冬之际， 我依然决定从事iOS软件开发相关行业， 和我的一个好兄弟， 我们一起出发去了北京， 去学习iOS开发技术。 当时iOS开发还是非常热门的职业，北上广深的iOS开发，安卓开发的培训机构如火如荼，遍地开花。可以说是IT软件培训相关最火热的年份，当时去北京学习， 家里还是非常的支持的， 包括我的一些亲属，我当时还记得，当时我的学费，还是我的舅舅卖玉米的钱借给我的。在北京学习开发的这段日子，非常的艰苦， 我住在一个没有阳光，没有窗户的宿舍当中，从早上的9点开始上课， 一直学习和coding到半夜12点，教室里半夜12点大家都不回家，所有同学都坐在教室里面刻苦的学习代码，半夜饿的真的是受不了，一天吃四顿饭都没有发胖，晚上吃方便面连热水都没有，宿舍的走廊的热水饮水机经常会坏掉，因为很饿，没有办法只能用卫生间热水器的水去泡方便面吃。呜呜呜&amp;hellip;&amp;hellip;（当然了， 这些艰苦的话我也不是说立自己能吃苦的人设和剥夺同情哈，在这里只是说一下当时真实的情况）当时学完iOS开发之后，找工作非常的难，因为iOS开发者已经烂大街了， 大量的培训出来的学生充斥着市场， 毕业即失业再一次的在我的身上发生了， 但是这一次有技术傍身， 所以比第一次好很多，我经历了1个月的时间， 投递了iOS开发相关/移动开发相关的 1500+份简历，一个月内我面试了12家企业，功夫不负有心人，最终我收到了2家公司的offer，成功的转型成了一名iOS开发者。这一刻， 我的所有努力和付出都是值得的, 工作N个月后，我也把舅舅借我的学费还上了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker部署CUPS打印服务</title>
      <link>https://blog.mose.ltd/posts/docker%E9%83%A8%E7%BD%B2cups%E6%89%93%E5%8D%B0%E6%9C%8D%E5%8A%A1-%E4%BD%BF%E4%BC%A0%E7%BB%9F%E6%89%93%E5%8D%B0%E6%9C%BA%E6%94%AF%E6%8C%81airprint/</link>
      <pubDate>Sun, 08 Oct 2023 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/docker%E9%83%A8%E7%BD%B2cups%E6%89%93%E5%8D%B0%E6%9C%8D%E5%8A%A1-%E4%BD%BF%E4%BC%A0%E7%BB%9F%E6%89%93%E5%8D%B0%E6%9C%BA%E6%94%AF%E6%8C%81airprint/</guid>
      <description>&lt;h2 id=&#34;docker部署cups打印服务-使传统打印机支持airprint&#34;&gt;Docker部署CUPS打印服务， 使传统打印机支持AirPrint&lt;/h2&gt;&#xA;&lt;p&gt;在iOS / macOS / iPadOS 当中， 我们在任意分享页面经常可以看到“打印”，如果我们有支持AirPrint功能的打印机的时候，当打印机连接在和设备的同一局域网下面的时候， 我们就可以在打印当中发现AirPrint打印机，并快速 便捷的使用打印功能。但是，我们并不是所有的打印机都支持AirPrint功能， 而且支持AirPrint功能都比较昂贵，那么我们如何才能将传统的USB打印机通过一些技术手段，将USB打印机变为AirPrint打印机呢？&lt;/p&gt;&#xA;&lt;p&gt;前期准备工作：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker （ 任何运行方式都可以， 比如软路由，群晖，Ubuntu&amp;hellip; everything )&lt;/li&gt;&#xA;&lt;li&gt;一台USB打印机 任何品牌&lt;/li&gt;&#xA;&lt;li&gt;打印机的Linux驱动 （ 官网下载， 如果CUPS默认自带打印机驱动可不用额外准备 ）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体方案如下:&lt;/p&gt;&#xA;&lt;p&gt;1.docker 部署CUPS服务&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo docker run -d --name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;airprint --net&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;  --privileged&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;true&lt;/span&gt;  -e &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;TZ&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Asia/Shanghai&amp;#34;&lt;/span&gt;  -e &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;HOST_OS&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;“Ubuntu” -p &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;631:631&amp;#39;&lt;/span&gt;  -v &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/volume1/docker/airprint/config&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/config&amp;#34;&lt;/span&gt;  -v /dev:/dev  -v &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/volume1/docker/airprint/avahi&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/etc/avahi/services&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\-&lt;/span&gt;v /var/run/dbus:/var/run/dbus &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;olbat/cupsd&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2.执行完毕后运行。&lt;/p&gt;&#xA;&lt;p&gt;cupsd启动之后打开浏览器访问cups服务的web管理页面， 并点击顶部菜单&amp;quot;Administration&amp;quot;, 点击 Printers 分类中的 &amp;ldquo;Add Print&amp;rdquo; 按钮，然后输入默认的账号 print , 密码 print ，登陆之后你就会看到USB连接到这台docker设备上的打印机型号， 我这里的打印机是佳能的激光打印机 Canon LBP6018L , 这里我们发现Local Printers已经识别出来 &amp;ldquo;Canon LBP6030/6040/6018L&amp;quot;打印机了， 我们选择，然后点击continue 继续。&lt;/p&gt;&#xA;&lt;p&gt;3.按提示填写打印机的名字/描述, 并勾选☑️“Share This Printer” , 然后点击继续。在驱动列表当中选择你的打印机品牌和型号， 如果列表当中有你的打印机型号， 即添加打印机完毕。 可在Web管理当中打印测试页进行测试。如果列表当中并没有你的打印机型号的时候， 请你去官网去查找你的打印机的Linux驱动， 并下载到本地。 通过 scp 服务传输到我们docker所在的服务器/主机当中。并传输进docker容器当中（使用docker cp) 命令。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何自己手动编译openWRT on ubuntu server</title>
      <link>https://blog.mose.ltd/posts/how_to_build_openwrt/</link>
      <pubDate>Sat, 07 Oct 2023 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/how_to_build_openwrt/</guid>
      <description>&lt;h2 id=&#34;如何自己手动编译openwrt-on-ubuntu-server&#34;&gt;如何自己手动编译openWRT on ubuntu server&lt;/h2&gt;&#xA;&lt;h4 id=&#34;1前期准备&#34;&gt;1.前期准备&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ubuntu linux server&lt;/li&gt;&#xA;&lt;li&gt;魔法上网环境 （ 中国大陆用户 ）&lt;/li&gt;&#xA;&lt;li&gt;脑子 🧠&lt;/li&gt;&#xA;&lt;li&gt;双手 👋&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2前往lean-仓库克隆代码&#34;&gt;2.前往Lean 仓库克隆代码&lt;/h4&gt;&#xA;&lt;p&gt;点击 &lt;a href=&#34;https://github.com/coolsnowwolf/lede&#34;&gt;Lean Openwrt仓库地址&lt;/a&gt;进入该项目首页， 为接下来的编译提供参考。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt full-upgrade -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;vim wget xmlto xxd zlib1g-dev python3-setuptools&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译后的固件路径地址&lt;/p&gt;</description>
    </item>
    <item>
      <title>沧水KMS激活脚本——windows10、11支持全系</title>
      <link>https://blog.mose.ltd/posts/%E6%B2%A7%E6%B0%B4kms%E6%BF%80%E6%B4%BB%E8%84%9A%E6%9C%ACwindows1011%E6%94%AF%E6%8C%81%E5%85%A8%E7%B3%BB/</link>
      <pubDate>Fri, 07 Oct 2022 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E6%B2%A7%E6%B0%B4kms%E6%BF%80%E6%B4%BB%E8%84%9A%E6%9C%ACwindows1011%E6%94%AF%E6%8C%81%E5%85%A8%E7%B3%BB/</guid>
      <description>&lt;h1 id=&#34;沧水kms激活脚本windows1011支持全系&#34;&gt;沧水KMS激活脚本——windows10、11支持全系&lt;/h1&gt;&#xA;&lt;h3 id=&#34;kms-是什么-&#34;&gt;KMS 是什么 ?&lt;/h3&gt;&#xA;&lt;p&gt;KMS的全称是 Key Management Service , 即密钥管理服务&lt;/p&gt;&#xA;&lt;p&gt;KMS是微软认可的一种产品激活方式 , 主要用于企业公司的内部批量激活设备。&lt;/p&gt;&#xA;&lt;p&gt;KMS脚本激活不容易误报病毒，激活更安全。这里感谢🙏沧水提供的KMS激活服务&lt;/p&gt;&#xA;&lt;h3 id=&#34;脚本下载地址&#34;&gt;脚本下载地址&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kms.cangshui.net/kms/KMS-Cangshui.net.bat&#34;&gt;仓水服务器本地下载&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;原文地址:&lt;a href=&#34;https://kms.cangshui.net/&#34;&gt;https://kms.cangshui.net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;使用说明&#34;&gt;使用说明&lt;/h3&gt;&#xA;&lt;p&gt;【①】激活Windows系统要求：尽可能不使用淘宝/电脑城奸商系统，某吧某坛大神精简系统，某木风某白菜某之家某花园某家园魔改ghost系统，等一系列被人二次修改的系统，你可以点击这里下载原版系统镜像&lt;/p&gt;&#xA;&lt;p&gt;【②】Windows7只支持专业VL版，点这里下载，windows10与windows11支持全系,OEM版什么的就肯定不能用kms激活&lt;/p&gt;&#xA;&lt;p&gt;【③】激活Office要求：请勿使用各种精简版或上古版本你可以点击这里下载官方Office镜像&lt;/p&gt;&#xA;&lt;p&gt;【④】KMS激活Office时，请根据你安装的软件版本选择激活为2016还是2019/2021版本&lt;/p&gt;&#xA;&lt;p&gt;【⑤】双击脚本运行时，windows自带的安全机制会弹出窗口询问你是否要运行！因为脚本是申请了管理员权限的&lt;/p&gt;&#xA;&lt;p&gt;【⑥】0x80070005错误一般是你没用管理员权限运行CMD，请检查是否被拦截运行&lt;/p&gt;&#xA;&lt;p&gt;【⑦】清除Windows的kms之后需要重启电脑才能重新激活！&lt;/p&gt;&#xA;&lt;p&gt;【⑧】大多数情况你根本不用到处问来问去，直接根据出错代码自己百度搜索出错原因就行了！&lt;/p&gt;&#xA;&lt;p&gt;KMS激活脚本下载(更新时间：2022-02-20 更新日志)：&lt;/p&gt;&#xA;&lt;p&gt;已更新“去除Office显示许可证并非正版”功能！&lt;/p&gt;</description>
    </item>
    <item>
      <title>从 CTO 到独立开发者：我对技术与产品的 5 张便签</title>
      <link>https://blog.mose.ltd/posts/%E4%BB%8E-cto-%E5%88%B0%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E6%88%91%E5%AF%B9%E6%8A%80%E6%9C%AF%E4%B8%8E%E4%BA%A7%E5%93%81%E7%9A%84-5-%E5%BC%A0%E4%BE%BF%E7%AD%BE/</link>
      <pubDate>Fri, 19 Nov 2021 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E4%BB%8E-cto-%E5%88%B0%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E6%88%91%E5%AF%B9%E6%8A%80%E6%9C%AF%E4%B8%8E%E4%BA%A7%E5%93%81%E7%9A%84-5-%E5%BC%A0%E4%BE%BF%E7%AD%BE/</guid>
      <description>&lt;p&gt;《从 CTO 到独立开发者：我对技术与产品的 5 张便签》&lt;/p&gt;&#xA;&lt;p&gt;（把那年办公室的门关上，我把工牌揣进兜里，电梯一路往下。屏幕上还有最后一条“本季度里程碑完成率 86%”。一小时后，我坐在出租屋的木桌前，屏幕上只剩一个进度条和一杯温掉的咖啡。没有周会，没有评审，我得和时间谈判。下面这 5 张便签，就是那几年从“带队造船”到“独自划艇”的换挡记录。）&lt;/p&gt;&#xA;&lt;p&gt;— 便签一：节奏不是缩小版的流程 —&lt;/p&gt;&#xA;&lt;p&gt;场景：大公司最后一周，我花了两天把路线图写到 Q4；独立后的第一周，我花了两天只为把 App 的“第一次点击”变得更顺手。&lt;/p&gt;&#xA;&lt;p&gt;领悟：团队协作靠“流程”，个体产出靠“节奏”。把路线图摁在日历上无效，把节奏摁进身体才有用。&lt;/p&gt;&#xA;&lt;p&gt;我改了三件事：&lt;/p&gt;&#xA;&lt;p&gt;1）以“节气”做迭代锚点——每两周一次“对外可发布”的成果，不豪华，但真实。&lt;/p&gt;&#xA;&lt;p&gt;2）每天 3 个固定问题：今天交付什么、挡我的是谁、删掉哪件不该做的事。&lt;/p&gt;&#xA;&lt;p&gt;3）把周报换成“周日开箱”：给朋友发一条 TestFlight 或下载链接，请他开箱用 10 分钟。&lt;/p&gt;&#xA;&lt;p&gt;一句规矩：&lt;strong&gt;能公开展示的进度，才算进度。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;— 便签二：可扩展性和可替换性，不是一回事 —&lt;/p&gt;&#xA;&lt;p&gt;场景：当 CTO，我为“未来三年增长”谈了半天的微服务；做独立，我把三套服务并成一套，甚至把消息队列换成了最土的本地队列加重试。&lt;/p&gt;&#xA;&lt;p&gt;领悟：团队时代追“可扩展性”，个体阶段更需要“可替换性”——哪块坏了能快速抽出来换，不牵一发动全身。&lt;/p&gt;&#xA;&lt;p&gt;我做技术决策的新准绳：&lt;/p&gt;&#xA;&lt;p&gt;· 先选“稳”：成熟库 &amp;gt; 新潮轮子；能用系统能力就别自己造（例如 iOS 侧先用系统分享、系统存储）。&lt;/p&gt;&#xA;&lt;p&gt;· 少一点“全能”，多一点“围栏”：把复杂逻辑顶到边界（网络、存储、解码），中间保持简单。&lt;/p&gt;&#xA;&lt;p&gt;· 所有外部依赖都包一层“出口”，只暴露三件事：成功、失败、重试。将来要换实现，动这里。&lt;/p&gt;&#xA;&lt;p&gt;一句规矩：&lt;strong&gt;当你一个人时，最强的架构是“能被替换的模块”，而不是“能承载一切的城墙”。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;— 便签三：价值要被看见，而不是被解释 —&lt;/p&gt;&#xA;&lt;p&gt;场景：当 CTO，我给产品部做过 40 页的 PRD 解读；独立之后，我把首屏只留一件事：点开就能得到“可分享的结果”。其他入口全部后置。&lt;/p&gt;&#xA;&lt;p&gt;领悟：用户不是来听你讲道理的。价值要在 10 秒里“发生”，而不是在 10 分钟里“说明”。&lt;/p&gt;&#xA;&lt;p&gt;我对首屏的改造术：&lt;/p&gt;&#xA;&lt;p&gt;· 只允许一条主线动作；其他功能像星等一样按远近排位。&lt;/p&gt;&#xA;&lt;p&gt;· 用“前后对照”替代“功能枚举”：让用户明确看到付费前后结果的差异（清晰、速度、上限）。&lt;/p&gt;&#xA;&lt;p&gt;· 付费墙不再是拦路，而是“可验证的承诺”：现在付了，世界哪里不同；如果不合适，如何优雅退出。&lt;/p&gt;&#xA;&lt;p&gt;一句规矩：&lt;strong&gt;好产品是让手先懂，再让脑点头。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;— 便签四：两只表——一只是业务，一只是人 —&lt;/p&gt;&#xA;&lt;p&gt;场景：那会儿我盯着一堆指标：DAU、留存、转化、崩溃率。独立之后，我又加了一只“人”的表：睡眠、运动、连续深度工作小时数。&lt;/p&gt;&#xA;&lt;p&gt;领悟：项目死于“没钱”之前，常常先死于“没力气”。只有两只表都往上走，曲线才有延续性。&lt;/p&gt;&#xA;&lt;p&gt;我保留下来的四个业务指标：&lt;/p&gt;</description>
    </item>
    <item>
      <title>从 UIKit 到 SwiftUI：一个 iOS 开发者的“思维革命”</title>
      <link>https://blog.mose.ltd/posts/%E4%BB%8E-uikit-%E5%88%B0-swiftui%E4%B8%80%E4%B8%AA-ios-%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%80%9D%E7%BB%B4%E9%9D%A9%E5%91%BD/</link>
      <pubDate>Tue, 21 Jul 2020 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E4%BB%8E-uikit-%E5%88%B0-swiftui%E4%B8%80%E4%B8%AA-ios-%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%80%9D%E7%BB%B4%E9%9D%A9%E5%91%BD/</guid>
      <description>&lt;p&gt;——写给三年前写 Auto Layout 约束写到手抽筋的我&lt;/p&gt;&#xA;&lt;p&gt;【短笺一｜从“摆控件”到“叙事”】&lt;/p&gt;&#xA;&lt;p&gt;那晚我在 storyboard 里拖了第六条约束，按钮还是偏一像素。我把屏幕一锁，换成 SwiftUI 起手的三行：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Swift&#34; data-lang=&#34;Swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VStack(spacing: &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    TitleView(text: title)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Toggle(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;提醒我&amp;#34;&lt;/span&gt;, isOn: $isOn)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PrimaryButton(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;保存&amp;#34;&lt;/span&gt;, action: save)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.padding(.horizontal, &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;UIKit 的工作像在摆家具：先放沙发，再推茶几，手里拿着卷尺；SwiftUI 像写分镜：镜头一、镜头二、镜头三，&lt;strong&gt;布局来自层次&lt;/strong&gt;。真正的转折不是“写法更少”，而是&lt;strong&gt;把“界面==状态的函数”这件事当真&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;UI = f(state)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;你把“按下保存键 → 置灰按钮 → 显示 HUD → 跳转下一页”的一堆 imperative 操作，换成了&lt;strong&gt;状态流&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;enum ScreenState { idle, saving, saved }&lt;/p&gt;&#xA;&lt;p&gt;视图只描述&lt;strong&gt;各状态的样子&lt;/strong&gt;，&lt;strong&gt;过渡&lt;/strong&gt;交给 SwiftUI 的 diff 和动画系统。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;你第一次发现，删掉一半的“隐藏/显示”布尔开关，界面反而更稳。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;给过去的你&lt;/strong&gt;：别先问“这个控件在哪儿”，先问“这个状态有哪些形态”。形态写对了，控件自己会排好队。&lt;/p&gt;&#xA;&lt;p&gt;【短笺二｜生命周期不再是“回调清单”】&lt;/p&gt;&#xA;&lt;p&gt;UIKit 的脑图里有 viewDidLoad / viewWillAppear / viewDidAppear / &amp;hellip;。SwiftUI 里，这张清单被撕碎，换成了三个钩子：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;onAppear：&lt;strong&gt;第一次渲染或再次进入视图&lt;/strong&gt;时触发（注意：List 里的 cell 也会反复 appear）。&lt;/li&gt;&#xA;&lt;li&gt;task：&lt;strong&gt;与视图绑定&lt;/strong&gt;的异步任务；当视图消失时自动取消。&lt;/li&gt;&#xA;&lt;li&gt;onChange(of:)：状态观察器，告诉你“&lt;strong&gt;变化发生了&lt;/strong&gt;，你要不要跟一下动作”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DetailScreen&lt;/span&gt;: View {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @State &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;model&lt;/span&gt;: Model?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @State &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;isSaving&lt;/span&gt; = &lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;body&lt;/span&gt;: some View {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        content&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .task { model = &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt;? await api.fetch() }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .onChange(of: isSaving) { saving &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; saving { Analytics.log(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;begin_save&amp;#34;&lt;/span&gt;) }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;你不再“记着”何时解绑通知、何时取消网络请求；&lt;strong&gt;视图的可见性=任务的生命&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;你第一次把“防内存泄漏”的 checklist 扔进了垃圾桶一半。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;给过去的你&lt;/strong&gt;：把副作用丢进 task，把监听丢进 onChange，把一次性的初始化丢进 onAppear。剩下的交给系统回收。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从 Python(Flask) 到 Go(Gin)：一段后端“换舵记”</title>
      <link>https://blog.mose.ltd/posts/%E4%BB%8E-pythonflask-%E5%88%B0-gogin%E4%B8%80%E6%AE%B5%E5%90%8E%E7%AB%AF%E6%8D%A2%E8%88%B5%E8%AE%B0/</link>
      <pubDate>Thu, 21 Mar 2019 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E4%BB%8E-pythonflask-%E5%88%B0-gogin%E4%B8%80%E6%AE%B5%E5%90%8E%E7%AB%AF%E6%8D%A2%E8%88%B5%E8%AE%B0/</guid>
      <description>&lt;h1 id=&#34;从-pythonflask-到-gogin一段后端换舵记&#34;&gt;&lt;strong&gt;从 Python(Flask) 到 Go(Gin)：一段后端“换舵记”&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;半夜 1:40，报警短信把我从椅子上拽起来：P95 突然升到 800ms。机房的风像打鼓，Gunicorn 的 worker 数往上拧了一圈又一圈。请求还是像涨潮一样涌进来。我盯着那条最慢的接口，心里第一次冒出一句话：&lt;strong&gt;也许我需要一门更像“发动机”的语言。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;起风瓶颈并不是写得不够优雅&#34;&gt;&lt;strong&gt;起风｜瓶颈并不是“写得不够优雅”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;那一夜复盘，结论很俗，但很实在：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;并发模型不投缘&lt;/strong&gt;：WSGI 下我靠多进程/多线程把吞吐“堆”上去，GIL 没直接卡住 IO，但上下文切换和序列化成了隐形税。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;序列化成本&lt;/strong&gt;：Pydantic + json.dumps 在热路径上很勤奋，也很“费力”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;连接管理&lt;/strong&gt;：SQLAlchemy 的池子我调到 50 了，还是能遇到偶发的“闸门”，而它恰好发生在流量波峰。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;部署心智&lt;/strong&gt;：虚拟环境、系统依赖、C 扩展版本匹配。不是不能治，只是治起来像老房子翻修。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;那晚我关掉了最后一个 worker 的扩容策略，给自己立了个规矩：&lt;strong&gt;下一个迭代，我做一个平行实现，用 Go 的 Gin 把那条最慢接口写出来，直到数字说话。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;换舵为什么是-gin&#34;&gt;&lt;strong&gt;换舵｜为什么是 Gin&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;不想搞“主义”，只说对我这类 API 服务的&lt;strong&gt;顺手&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;轻，直接&lt;/strong&gt;：net/http 起手，Gin 只是在路由和中间件上给了舒服的壳。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;并发像呼吸一样自然&lt;/strong&gt;：goroutine + channel，把“等数据库”和“等下游”的时间让出来。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可观察性开箱即用&lt;/strong&gt;：pprof、expvar、runtime/trace，定位抖动不用再绕弯。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;交付简单&lt;/strong&gt;：一个静态二进制，容器镜像从 600MB 瘦到几十 MB，冷启动更短。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型系统&lt;/strong&gt;：对协议收敛、边界清单特别友好（尤其配合 OpenAPI 做契约测试）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我不是抛弃 Python。它仍然是脚本、工具、离线处理与快速检验的王。只是“这台发动机”，Go 更贴合。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;工地现场我把最慢接口抠了两遍&#34;&gt;&lt;strong&gt;工地现场｜我把最慢接口抠了两遍&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;flask-版本化简后&#34;&gt;&lt;strong&gt;Flask 版本（化简后）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# app.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Flask, request, jsonify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; models &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Session, Item&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; schemas &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; ItemOut  &lt;span style=&#34;color:#6272a4&#34;&gt;# pydantic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@app.route(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/v1/items/&amp;lt;int:item_id&amp;gt;&amp;#34;&lt;/span&gt;, methods&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;get_item&lt;/span&gt;(item_id):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;headers&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;X-User&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; Session() &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; s:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        row &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;query(Item)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;filter(Item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt;item_id, Item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;user_id&lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt;user_id)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;one_or_none()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; row:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; jsonify({&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;not_found&amp;#34;&lt;/span&gt;}), &lt;span style=&#34;color:#bd93f9&#34;&gt;404&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ItemOut&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_orm(row)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dict()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; jsonify(data), &lt;span style=&#34;color:#bd93f9&#34;&gt;200&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gin-版本等价功能&#34;&gt;&lt;strong&gt;Gin 版本（等价功能）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// main.go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;type&lt;/span&gt; Item &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID     &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;id&amp;#34; json:&amp;#34;id&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserID &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;user_id&amp;#34; json:&amp;#34;-&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Name   &lt;span style=&#34;color:#8be9fd&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;name&amp;#34; json:&amp;#34;name&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ctime  &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;ctime&amp;#34; json:&amp;#34;ctime&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;getItem&lt;/span&gt;(db &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;sqlx.DB) gin.HandlerFunc {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt;(c &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;gin.Context) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        itemID, _ &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; strconv.&lt;span style=&#34;color:#50fa7b&#34;&gt;ParseInt&lt;/span&gt;(c.&lt;span style=&#34;color:#50fa7b&#34;&gt;Param&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;item_id&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        userID, _ &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; strconv.&lt;span style=&#34;color:#50fa7b&#34;&gt;ParseInt&lt;/span&gt;(c.&lt;span style=&#34;color:#50fa7b&#34;&gt;GetHeader&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;X-User&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ctx, cancel &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; context.&lt;span style=&#34;color:#50fa7b&#34;&gt;WithTimeout&lt;/span&gt;(c.Request.&lt;span style=&#34;color:#50fa7b&#34;&gt;Context&lt;/span&gt;(), &lt;span style=&#34;color:#bd93f9&#34;&gt;500&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;time.Millisecond)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;cancel&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; it Item&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; db.&lt;span style=&#34;color:#50fa7b&#34;&gt;GetContext&lt;/span&gt;(ctx, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;it,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f1fa8c&#34;&gt;`SELECT id,user_id,name,ctime FROM items WHERE id=? AND user_id=?`&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            itemID, userID)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; sql.ErrNoRows {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusNotFound, gin.H{&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;not_found&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusServiceUnavailable, gin.H{&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;db_unavailable&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusOK, it)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; gin.&lt;span style=&#34;color:#50fa7b&#34;&gt;New&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r.&lt;span style=&#34;color:#50fa7b&#34;&gt;Use&lt;/span&gt;(gin.&lt;span style=&#34;color:#50fa7b&#34;&gt;Recovery&lt;/span&gt;(), &lt;span style=&#34;color:#50fa7b&#34;&gt;requestLogger&lt;/span&gt;(), &lt;span style=&#34;color:#50fa7b&#34;&gt;prometheusMiddleware&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; sqlx.&lt;span style=&#34;color:#50fa7b&#34;&gt;MustConnect&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;, os.&lt;span style=&#34;color:#50fa7b&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;DSN&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r.&lt;span style=&#34;color:#50fa7b&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/v1/items/:item_id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#50fa7b&#34;&gt;getItem&lt;/span&gt;(db))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _ = r.&lt;span style=&#34;color:#50fa7b&#34;&gt;Run&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:8080&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;差别感受（真实开发里的手感）&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
