<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Biney&#39;s blog</title>
    <link>https://blog.mose.ltd/tags/python/</link>
    <description>Recent content in Python on Biney&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Sep 2025 14:33:56 +0800</lastBuildDate>
    <atom:link href="https://blog.mose.ltd/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工业项目设计｜ CUDA 算投影，YOLOv8识别</title>
      <link>https://blog.mose.ltd/posts/%E5%B7%A5%E4%B8%9A%E7%BA%BF%E4%B8%8A%E7%9A%84%E4%BD%9C%E4%B8%9A%E6%8C%87%E5%AF%BC%E4%B9%A6%E7%94%A8-pyvista-%E6%B8%B2%E6%9F%93-las%E7%94%A8-cuda-%E7%AE%97%E6%8A%95%E5%BD%B1%E5%86%8D%E8%AE%A9-yolov8-%E6%8A%8A%E7%89%A9%E4%BD%93%E7%82%B9%E5%90%8D/</link>
      <pubDate>Tue, 09 Sep 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E5%B7%A5%E4%B8%9A%E7%BA%BF%E4%B8%8A%E7%9A%84%E4%BD%9C%E4%B8%9A%E6%8C%87%E5%AF%BC%E4%B9%A6%E7%94%A8-pyvista-%E6%B8%B2%E6%9F%93-las%E7%94%A8-cuda-%E7%AE%97%E6%8A%95%E5%BD%B1%E5%86%8D%E8%AE%A9-yolov8-%E6%8A%8A%E7%89%A9%E4%BD%93%E7%82%B9%E5%90%8D/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这个项目不是论文，是一份能在车间落地的“作业指导书”。材料、工序、质检一步步来，最后把坑也写明白，省你半夜返工。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;— 备料清单（用到什么，心里要有数）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据&lt;/strong&gt;：.las 点云（结构光/激光线扫均可），单帧≈百万级点。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;渲染&lt;/strong&gt;：PyVista（基于 VTK），支持交互缩放/旋转/截图。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;加速&lt;/strong&gt;：CUDA（CuPy 或 Numba CUDA），把投影/筛选/LOD 丢给 GPU。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;识别&lt;/strong&gt;：YOLOv8（ultralytics），先在渲染帧上做 2D 检测，再把框“投回”3D。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;硬件&lt;/strong&gt;：NVIDIA 显卡（8GB 显存以上更稳），PCIe 不要跑在 x4 半高上。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;系统提示&lt;/strong&gt;：开启显卡持久化模式，避免首次 Kernel 冷启动卡顿。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;— 工序卡 ①：把 LAS 落到屏幕上（基础渲染骨架）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; laspy&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; numpy &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; pyvista &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;las &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; laspy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample.las&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyz &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;vstack([las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;x, las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;y, las&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;z])&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;T&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32)     &lt;span style=&#34;color:#6272a4&#34;&gt;# (N,3)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;getattr&lt;/span&gt;(las, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;intensity&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cloud &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pv&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;PolyData(xyz)                                        &lt;span style=&#34;color:#6272a4&#34;&gt;# 点云&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cloud[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;I&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; intensity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;min()) &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; (intensity&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;ptp() &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1e-6&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pv&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Plotter()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add_points(cloud, scalars&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;I&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; intensity &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   render_points_as_spheres&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;False&lt;/span&gt;, point_size&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;show_axes()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plotter&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;show(auto_close&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;False&lt;/span&gt;)                                   &lt;span style=&#34;color:#6272a4&#34;&gt;# 后面要截图/回调&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;先“看见”再谈优化。首屏能稳定 15–20 fps，是后续调参的底线。&lt;/li&gt;&#xA;&lt;li&gt;点大小别贪，2px 起步。点云太密先做下采样（后文用 CUDA 处理）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;— 工序卡 ②：把重活丢给 GPU（投影、视锥裁剪、LOD 一把梭）&lt;/p&gt;</description>
    </item>
    <item>
      <title>手拧出来的界面——Python &#43; Qt5 纯代码布局实战手账</title>
      <link>https://blog.mose.ltd/posts/%E6%89%8B%E6%8B%A7%E5%87%BA%E6%9D%A5%E7%9A%84%E7%95%8C%E9%9D%A2python-&#43;-qt5-%E7%BA%AF%E4%BB%A3%E7%A0%81%E5%B8%83%E5%B1%80%E5%AE%9E%E6%88%98%E6%89%8B%E8%B4%A6/</link>
      <pubDate>Sat, 02 Aug 2025 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E6%89%8B%E6%8B%A7%E5%87%BA%E6%9D%A5%E7%9A%84%E7%95%8C%E9%9D%A2python-&#43;-qt5-%E7%BA%AF%E4%BB%A3%E7%A0%81%E5%B8%83%E5%B1%80%E5%AE%9E%E6%88%98%E6%89%8B%E8%B4%A6/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;记录一次从“拖一拖就能跑”到“手拧螺丝”的转向。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;场景：做一个日志管理与点云浏览的小工具，迭代很快，UI 需要频繁改版。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;00为什么我从可视化回到纯代码&#34;&gt;&lt;strong&gt;00｜为什么我从可视化回到纯代码&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;那天晚上 23:40&lt;/strong&gt;，我在 Qt Designer 里把两个 QHBoxLayout 嵌套成了“左树右表”，又加了三层 QSpacerItem。看起来顺手，但两件小事把我劝退了：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;改动难做“参数化”&lt;/strong&gt;：想“根据配置隐藏右栏”，在 .ui 里要加占位、条件样式，变成“面向工具工作”，不是“面向需求工作”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;版本控制不可读&lt;/strong&gt;：.ui 是 XML，MR 里几十行 diff 看不出&lt;strong&gt;意图&lt;/strong&gt;，合并时冲突又脆。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;后来我用纯代码重搭一遍布局。几百行 Python 全在仓里，谁改了哪一行一眼明白。主题切换、动态插拔控件、AB 测试布局，都更像写程序而不是拼积木。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Designer 优点&lt;/strong&gt;：上手快、视觉把控直观、适合静态页面。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Designer 痛点&lt;/strong&gt;：动态视图/条件布局吃力、PR 不可读、多人协作容易踩冲突。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;纯代码优点&lt;/strong&gt;：参数化、复用、可测试、可 review。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;纯代码门槛&lt;/strong&gt;：前期慢；但一旦形成“布局配方”，改动成本下降快。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;01三张布局配方卡&#34;&gt;&lt;strong&gt;01｜三张“布局配方卡”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;配方卡都用 &lt;strong&gt;PyQt5&lt;/strong&gt;（pip install PyQt5），关键是&lt;strong&gt;结构&lt;/strong&gt;与&lt;strong&gt;伸缩因子&lt;/strong&gt;用对。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;卡-1经典三段式工具栏--主区--状态栏&#34;&gt;&lt;strong&gt;卡 1：经典三段式（工具栏 / 主区 / 状态栏）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (QApplication, QMainWindow, QWidget, QVBoxLayout,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             QHBoxLayout, QToolBar, QLabel, QStatusBar, QPushButton)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Shell&lt;/span&gt;(QMainWindow):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; __init__(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;__init__()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setWindowTitle(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;三段式配方&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# 1) 工具栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QToolBar(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;工具&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addAction(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;刷新&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tb&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addAction(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;导出&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addToolBar(tb)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# 2) 中心区：左列（过滤器）+ 右列（内容）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        center &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QHBoxLayout(center)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget(); left_col &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QVBoxLayout(left)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(QLabel(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;过滤器&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addStretch(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 左列靠上，剩余空间往下消化&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QWidget(); right_col &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; QVBoxLayout(right)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(QLabel(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;内容视图&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        right_col&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addStretch(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(left, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;)   &lt;span style=&#34;color:#6272a4&#34;&gt;# 权重 0：窄栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addWidget(right, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 权重 1：主栏&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setContentsMargins(&lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;12&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setSpacing(&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setCentralWidget(center)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setStatusBar(QStatusBar())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：&lt;/p&gt;</description>
    </item>
    <item>
      <title>从 Python(Flask) 到 Go(Gin)：一段后端“换舵记”</title>
      <link>https://blog.mose.ltd/posts/%E4%BB%8E-pythonflask-%E5%88%B0-gogin%E4%B8%80%E6%AE%B5%E5%90%8E%E7%AB%AF%E6%8D%A2%E8%88%B5%E8%AE%B0/</link>
      <pubDate>Thu, 21 Mar 2019 14:33:56 +0800</pubDate>
      <guid>https://blog.mose.ltd/posts/%E4%BB%8E-pythonflask-%E5%88%B0-gogin%E4%B8%80%E6%AE%B5%E5%90%8E%E7%AB%AF%E6%8D%A2%E8%88%B5%E8%AE%B0/</guid>
      <description>&lt;h1 id=&#34;从-pythonflask-到-gogin一段后端换舵记&#34;&gt;&lt;strong&gt;从 Python(Flask) 到 Go(Gin)：一段后端“换舵记”&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;半夜 1:40，报警短信把我从椅子上拽起来：P95 突然升到 800ms。机房的风像打鼓，Gunicorn 的 worker 数往上拧了一圈又一圈。请求还是像涨潮一样涌进来。我盯着那条最慢的接口，心里第一次冒出一句话：&lt;strong&gt;也许我需要一门更像“发动机”的语言。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;起风瓶颈并不是写得不够优雅&#34;&gt;&lt;strong&gt;起风｜瓶颈并不是“写得不够优雅”&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;那一夜复盘，结论很俗，但很实在：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;并发模型不投缘&lt;/strong&gt;：WSGI 下我靠多进程/多线程把吞吐“堆”上去，GIL 没直接卡住 IO，但上下文切换和序列化成了隐形税。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;序列化成本&lt;/strong&gt;：Pydantic + json.dumps 在热路径上很勤奋，也很“费力”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;连接管理&lt;/strong&gt;：SQLAlchemy 的池子我调到 50 了，还是能遇到偶发的“闸门”，而它恰好发生在流量波峰。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;部署心智&lt;/strong&gt;：虚拟环境、系统依赖、C 扩展版本匹配。不是不能治，只是治起来像老房子翻修。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;那晚我关掉了最后一个 worker 的扩容策略，给自己立了个规矩：&lt;strong&gt;下一个迭代，我做一个平行实现，用 Go 的 Gin 把那条最慢接口写出来，直到数字说话。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;换舵为什么是-gin&#34;&gt;&lt;strong&gt;换舵｜为什么是 Gin&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;不想搞“主义”，只说对我这类 API 服务的&lt;strong&gt;顺手&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;轻，直接&lt;/strong&gt;：net/http 起手，Gin 只是在路由和中间件上给了舒服的壳。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;并发像呼吸一样自然&lt;/strong&gt;：goroutine + channel，把“等数据库”和“等下游”的时间让出来。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可观察性开箱即用&lt;/strong&gt;：pprof、expvar、runtime/trace，定位抖动不用再绕弯。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;交付简单&lt;/strong&gt;：一个静态二进制，容器镜像从 600MB 瘦到几十 MB，冷启动更短。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型系统&lt;/strong&gt;：对协议收敛、边界清单特别友好（尤其配合 OpenAPI 做契约测试）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我不是抛弃 Python。它仍然是脚本、工具、离线处理与快速检验的王。只是“这台发动机”，Go 更贴合。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;工地现场我把最慢接口抠了两遍&#34;&gt;&lt;strong&gt;工地现场｜我把最慢接口抠了两遍&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;flask-版本化简后&#34;&gt;&lt;strong&gt;Flask 版本（化简后）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# app.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Flask, request, jsonify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; models &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Session, Item&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; schemas &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; ItemOut  &lt;span style=&#34;color:#6272a4&#34;&gt;# pydantic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@app.route(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/v1/items/&amp;lt;int:item_id&amp;gt;&amp;#34;&lt;/span&gt;, methods&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;get_item&lt;/span&gt;(item_id):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;headers&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;X-User&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; Session() &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; s:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        row &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;query(Item)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;filter(Item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;id&lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt;item_id, Item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;user_id&lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt;user_id)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;one_or_none()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; row:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; jsonify({&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;not_found&amp;#34;&lt;/span&gt;}), &lt;span style=&#34;color:#bd93f9&#34;&gt;404&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ItemOut&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_orm(row)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dict()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; jsonify(data), &lt;span style=&#34;color:#bd93f9&#34;&gt;200&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gin-版本等价功能&#34;&gt;&lt;strong&gt;Gin 版本（等价功能）&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// main.go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;type&lt;/span&gt; Item &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ID     &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;id&amp;#34; json:&amp;#34;id&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UserID &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;user_id&amp;#34; json:&amp;#34;-&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Name   &lt;span style=&#34;color:#8be9fd&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;name&amp;#34; json:&amp;#34;name&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ctime  &lt;span style=&#34;color:#8be9fd&#34;&gt;int64&lt;/span&gt;  &lt;span style=&#34;color:#f1fa8c&#34;&gt;`db:&amp;#34;ctime&amp;#34; json:&amp;#34;ctime&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;getItem&lt;/span&gt;(db &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;sqlx.DB) gin.HandlerFunc {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt;(c &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;gin.Context) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        itemID, _ &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; strconv.&lt;span style=&#34;color:#50fa7b&#34;&gt;ParseInt&lt;/span&gt;(c.&lt;span style=&#34;color:#50fa7b&#34;&gt;Param&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;item_id&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        userID, _ &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; strconv.&lt;span style=&#34;color:#50fa7b&#34;&gt;ParseInt&lt;/span&gt;(c.&lt;span style=&#34;color:#50fa7b&#34;&gt;GetHeader&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;X-User&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ctx, cancel &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; context.&lt;span style=&#34;color:#50fa7b&#34;&gt;WithTimeout&lt;/span&gt;(c.Request.&lt;span style=&#34;color:#50fa7b&#34;&gt;Context&lt;/span&gt;(), &lt;span style=&#34;color:#bd93f9&#34;&gt;500&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;time.Millisecond)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;cancel&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; it Item&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; db.&lt;span style=&#34;color:#50fa7b&#34;&gt;GetContext&lt;/span&gt;(ctx, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;it,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f1fa8c&#34;&gt;`SELECT id,user_id,name,ctime FROM items WHERE id=? AND user_id=?`&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            itemID, userID)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; sql.ErrNoRows {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusNotFound, gin.H{&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;not_found&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusServiceUnavailable, gin.H{&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;db_unavailable&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c.&lt;span style=&#34;color:#50fa7b&#34;&gt;JSON&lt;/span&gt;(http.StatusOK, it)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; gin.&lt;span style=&#34;color:#50fa7b&#34;&gt;New&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r.&lt;span style=&#34;color:#50fa7b&#34;&gt;Use&lt;/span&gt;(gin.&lt;span style=&#34;color:#50fa7b&#34;&gt;Recovery&lt;/span&gt;(), &lt;span style=&#34;color:#50fa7b&#34;&gt;requestLogger&lt;/span&gt;(), &lt;span style=&#34;color:#50fa7b&#34;&gt;prometheusMiddleware&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; sqlx.&lt;span style=&#34;color:#50fa7b&#34;&gt;MustConnect&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;, os.&lt;span style=&#34;color:#50fa7b&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;DSN&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r.&lt;span style=&#34;color:#50fa7b&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/v1/items/:item_id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#50fa7b&#34;&gt;getItem&lt;/span&gt;(db))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    _ = r.&lt;span style=&#34;color:#50fa7b&#34;&gt;Run&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:8080&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;差别感受（真实开发里的手感）&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
